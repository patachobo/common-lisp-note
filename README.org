#+TITLE: Readme
#+startup: hideblocks

* Inizio di una magica avventura in lisp
* Primo programma
** note
- scrivere :q nel REPL se non funziona qualcosa o succedono anomalie
* Guessing number game
** definizione di una variabile globale
*** defparameter
per definire una variabile globale si usa la parola riservata defparameter seguita dal nome della variabile inclusa tra 2 "*" (completamente facoltativi), ed in fine il valore di inizializzazione.
un esempio correlato al progetto Guessing number:
#+begin_src lisp
(defparameter *small* 1)
(defparameter *big* 100)
#+end_src
defparameter sovrascrive il valore precedente della variabile ad un nuovo utilizzo
#+begin_src lisp
(defparameter *foo* 5)
(defparameter *foo* 10)
#+end_src
in questo caso foo acquistera' il nuovo valore di 10
*** defvar
defvar si utilizza in modo analogo a defparameter, ma al contrario di quest'ultimo non sovrascrive la variabile globale ad un secondo riutilizzo
#+begin_src lisp
(defvar *foo* 5)
(defvar *foo* 10)
#+end_src
in questo caso *foo* continuera' ad avere il valore col quale e' stata inizializzata, cioe' 5
** valore di ritorno di una funzione
a differenza di altri linguaggi, lisp non ha bisogno di ritornare un valore esplicitamente, la funzione lo ritorna automaticamente
un esempio tra python e lisp:
#+begin_src python
# python
def return_10():
    return(10)
#+end_src
#+begin_src lisp
;; lisp
(defun return-10()
  10)
#+end_src
** la funzione ash
ash richiede due parametri entrambi interi, dove il primo e' il numero che verra' osservato in forma binaria, ed il secondo indica il numero di bits da shiftare a destra(-) o a sinistra(+), scartando i bits in eccesso
esempio:
#+begin_src lisp
(ash 100 -1)  ;; 100 e' 0110 0100 in binario
              ;; -1 come secondo parametro shifta a destra di un bit
              ;; facendolo diventare 0011 0010, ovvero 50 in decimale
(ash 100 2)   ;; al contrario, impostando il secondo parametro come uno
              ;; 0110 0100 shiftera' di due bits a sinistra, facendolo
              ;; diventare 0001 1001 0000, ovvero 400
#+end_src
